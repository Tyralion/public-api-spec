openapi: 3.0.1
info:
  title: TalentTech platform API
  description: |
    Публичное API платформы TalentTech.
  contact:
    email: support@talenttech.ru
  version: 1.0.0
externalDocs:
  description: TalentTech
  url: 'https://talenttech.ru'
servers:
  - url: 'https://integration.api.talenttech.ru/v1'
tags:
  - name: User
    description: |
      Управление пользователями
  - name: Authentication
    description: |
      Аутентификационные данные пользователей
  - name: Team
    description: |
      Управление организационной структурой компании
security:
  - ttAuth:
      - 'write:users'
      - 'read:users'
      - 'write:auth'
      - 'write:teams'
      - 'read:teams'
paths:
  /user:
    post:
      tags:
        - User
      security:
        - ttAuth:
            - 'write:users'
      summary: Создать пользователя
      description: >
        Операция создаёт пользователя и возвращает его uuid.

        В дальнейшем во всех операциях связанных с пользователем необходимо
        использовать данный uuid.
      responses:
        '201':
          description: Пользователь добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  '/user/{userid}/disable':
    post:
      tags:
        - User
      security:
        - ttAuth:
            - 'write:users'
      summary: Заблокировать пользователя в компании
      description: >
        Блокировка пользователя деактивирует все учётные данные пользователя
        которые принадлежат данной компании. Если пользователь имеет другие
        возможности входа, то он сможет войти в систему.  Долнительно блокировка
        пользователя, снимает его со всех позиций на которых пользователь
        находится. Т.е. если после блокировки его обратно разблокировать, то его
        будет необходимо добавить на позиции в командах иначе он не сможет
        полноценно пользоваться системой.
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  '/user/{userid}/enable':
    post:
      tags:
        - User
      security:
        - ttAuth:
            - 'write:users'
      summary: Разблокировать пользователя в компании
      description: >
        Обратно активирует все доступные пользователю способы аутентификации в
        рамках текущей компании. Внимание: пользователя необходимо добавить на
        занимаемую позицию!
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  /user/find:
    get:
      tags:
        - User
      security:
        - ttAuth:
            - 'read:users'
      summary: Найти пользователя по аутентификационным данным
      description: >
        Ищет пользователя по аутентификационным данным. Данный метод ищет только
        внутри аутентификационных данных принадлежащих текущей компании.
      responses:
        '200':
          description: Ok
          content: {}
  '/user/{userid}/auth/create':
    post:
      tags:
        - Authentication
      security:
        - ttAuth:
            - 'write:auth'
      summary: Добавляет способ аутентификации пользователя
      description: >
        У каждого пользователя может быть неограниченное количество способов
        аутентификации.

        Данный метод позволяет добавить способ аутентификации для пользователя.

        Способ аутентификации который создаётся в рамках этого вызова,
        ассооциирован с компанией в рамках которой был осуществлён вызов. В
        случае если где-то уже были использованы учётные данные будет ошибка.
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: Способ аутентификации
                    enum:
                      - email
                      - phone
                      - login
                      - ssoid
                  value:
                    type: string
                    description: Значение
                    format: string
      responses:
        '200':
          description: Способ аутентификации добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  password:
                    description: Созданый пароль если применимо к способу аутентификации
                    type: string
                    format: string
        '409':
          description: Способ конфликтует с имеющимся. Никаких изменений не произведено.
          content: {}
  '/user/{userid}/auth/reset':
    post:
      tags:
        - Authentication
      security:
        - ttAuth:
            - 'write:auth'
      summary: Изменить пароль для аутентификационных данных
      description: >
        Меняет пароль пользователя если указанный тип данных его поддерживает. В
        ответ из вызова возвращатся новый пароль. Внимание: пароль видно только
        1 раз в ответе из вызова.
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  '/user/{userid}/auth/disable':
    post:
      tags:
        - Authentication
      security:
        - ttAuth:
            - 'write:auth'
      summary: Заблокировать способ аутентификации
      description: >
        Блокирует способ аутентификации пользователя. Больше пользователь не
        сможет аутентифицироваться с этим способом. Внимание: если пользователь
        был аутентифицирован этим способом, то все его сессии аннулируются!
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  '/user/{userid}/auth/enable':
    post:
      tags:
        - Authentication
      security:
        - ttAuth:
            - 'write:auth'
      summary: Разблокировать способ входа
      description: >
        Включает способ аутентификации пользователя. Если способ включен - то не
        делает ничего.
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  '/user/{userid}/auth':
    get:
      tags:
        - Authentication
      security:
        - ttAuth:
            - 'read:users'
      summary: Получить список способов аутентификации
      description: >
        Возвращает список способов аутентификации пользователя в рамках текущей
        компании.
      parameters:
        - name: userid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content: {}
  /team:
    post:
      tags:
        - Team
      security:
        - ttAuth:
            - 'write:teams'
      summary: Создать команду в компании
      description: >
        Создаёт команду в оргструктуре организации. Может быть указан id
        предыдущей команды(команд) если команда создася при помощи слияния или
        ветвления. В случае создания команды с указанием предыдущих ID все
        позиции из предыдущих команд автоматически переносятся в новую команду.
        Если в ID передаётся активная команда, то она будет автоматически
        деактивирована в момент создания новой команды.
      responses:
        '200':
          description: Descr
          content: {}
    get:
      tags:
        - Team
      security:
        - ttAuth:
            - 'read:teams'
      summary: Корневой список команд
      description: >
        Выводит корневой список команд в компании. Для вывода дочерних команд
        нужно использовать вызов: GET /team/{teamid}
      responses:
        '200':
          description: Descr
          content: {}
  '/team/{teamid}':
    get:
      tags:
        - Team
      security:
        - ttAuth:
            - 'read:teams'
      summary: Детальные данные команды
      description: |
        Возвращает детальные данные команды и список дочерних команд.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
  '/team/{teamid}/deactivate':
    post:
      tags:
        - Team
      security:
        - ttAuth:
            - 'write:teams'
      summary: Деактивация команды
      description: >
        Метод деактивирует команду. После деактивации все позиции команды
        "повисают в воздухе" до тех пор пока эта команда не будет использована
        при создании новой.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
  '/team/{teamid}/position':
    post:
      tags:
        - Team
      security:
        - ttAuth:
            - 'write:teams'
      summary: Создать позицию
      description: |
        Создание позиции в команде.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
  '/team/{teamid}/position/{positionid}':
    get:
      tags:
        - Team
      security:
        - ttAuth:
            - 'read:teams'
      summary: Получить позицию
      description: |
        Получение информации о позиции в команде.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
        - name: positionid
          in: path
          description: Идентификатор позиции
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
    put:
      tags:
        - Team
      security:
        - ttAuth:
            - 'write:teams'
      summary: Обновить позицию
      description: >
        Обновление данных позиции в команде. В случае передачи нулевого id
        пользователя, позици становится вакантной, а пользователь который был на
        ней до этого, удаляется с позиции.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
        - name: positionid
          in: path
          description: Идентификатор позиции
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
    delete:
      tags:
        - Team
      security:
        - ttAuth:
            - 'write:teams'
      summary: Удалить позицию
      description: |
        Удаление позиции из команды.
      parameters:
        - name: teamid
          in: path
          description: Идентификатор команды
          required: true
          schema:
            type: string
        - name: positionid
          in: path
          description: Идентификатор позиции
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Descr
          content: {}
components:
  securitySchemes:
    ttAuth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://talenttech.ru/'
          scopes:
            'write:users': Редактирование пользователей
            'read:users': Чтение пользователей
            'write:auth': Управление аутентификационными данными
            'write:teams': Редактирование оргструктуры
            'read:teams': Чтение оргструктуры

